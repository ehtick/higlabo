@typeparam TItem
@typeparam TFilterItem

<div class="select-record-panel">
	@if (this.State.TabList.Count > 0)
	{
		var isDefaultTab = this.State.Tab == null;
		<div class="tab-list-panel">
		<span class="tab-panel" tabindex="0" selected="@isDefaultTab.ToString().ToLower()" @onclick="async e => await this.FilterTabSelected()">@T.Text.List</span>
			@foreach (var item in this.State.TabList)
			{
				var selected = this.State.Tab == item;
				<span class="tab-panel" tabindex="0" selected="@selected.ToString().ToLower()" @onclick="async e => await this.FilterTabSelected(item)">@item.Text</span>
			}
		</div>
	}
	@if (this.State.Tab == null)
	{
		if (this.State.SearchContainerPanelVisible == true)
		{
			<div class="search-container-panel">
				<input type="text" class="textbox" placeholder="@T.Text.Search"
					   @bind="this.State.SearchText" @bind:event="oninput" @onkeydown="e => SearchTextbox_Keydown(e)" />
				<div class="flex-right-panel">
					<button class="button radius-button" @onclick="async e => await SearchButton_Click(e)" @onclick:stopPropagation="true">@T.Text.Search</button>
					<button class="button radius-button" @onclick="async e => await this.OnClosed.InvokeAsync()">@T.Text.Close</button>
				</div>
			</div>
		}
		<div class="record-list-panel">
			@if (this.State.SelectAllVisible)
			{
				<div class="record-panel" @onclick="async e => await this.AllRecordSelected()">@T.Text.SelectAll</div>
			}
			@for (int i = 0; i < this.State.RecordList.Count; i++)
			{
				var cName = "record-panel";
				if (i == this.State.RecordIndex)
				{
					cName += " current";
				}
				var r = this.State.RecordList[i];
				if (this.ItemTemplate == null)
				{
					if (r == null)
					{
						<div class="@cName" @onclick="async e => await RecordPanel_Click(r)">@T.Text.Clear</div>
					}
					else
					{
						<div class="@cName" @onclick="async e => await RecordPanel_Click(r)">@r.ToString()</div>
					}
				}
				else
				{
					<div class="@cName" @onclick="async e => await RecordPanel_Click(r)">@this.ItemTemplate(r)</div>
				}
			}
		</div>
	}
	else
	{
		<div class="record-list-panel">
			@foreach (var item in this.State.Tab.RecordList)
			{
				if (this.FilterItemTemplate == null)
				{
					if (item == null)
					{
						<div class="record-panel" @onclick="async e => await FilterRecordPanel_Click(item)">Null</div>
					}
					else
					{
						<div class="record-panel" @onclick="async e => await FilterRecordPanel_Click(item)">@item.ToString()</div>
					}
				}
				else
				{
					<div class="record-panel" @onclick="async e => await FilterRecordPanel_Click(item)">@this.FilterItemTemplate(item)</div>
				}
			}
		</div>
	}
</div>

