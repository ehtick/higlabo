<div class="toggle-record-panel" @attributes="this.GetAttributes()" @ondragstart="e => Drag_Start(e)" @ondrop="async e => await Drag_End(e)" @ondragenter="Drag_Enter" @ondragleave="Drag_Leave">
    <div class="header-panel">
        @if (this.AllowSort)
        {
            <span class="drag-bar-panel">
                <span class="icon-panel">
                    <img class="icon" src="@UrlInfo.GetIconUrl(Higlabo__icon.DragBarPanel__svg)" />
                </span>
            </span>
        }
        @if (this.AllowHeaderEdit == true)
        {
            <input type="text" class="header-textbox" @oninput="async e => await HeaderTextbox_Input.InvokeAsync(e)" value="@this.HeaderText" />
        }
        else
        {
            <span class="header-text" tabindex="0"
                  @onclick="e => HeaderPanel_Click()"
                  @onkeydown="async e => await HeaderPanel_Keydown(e)">@this.HeaderText</span>
        }
        @if (this.AllowDelete)
        {
            <span class="delete-icon-panel" tabindex="0"
            @onclick="async e => await DeleteIcon_Click()" @onclick:stopPropagation="true"
            @onkeydown="async e => await DeleteIcon_Keydown(e)">
                <img src="@UrlInfo.GetIconUrl(Higlabo__icon.Delete__svg)" class="delete-icon" />
            </span>
        }
    </div>
    <div class="content-panel" toggle-state="@this.ToggleState.ToStringFromEnum()">@ContentPanel</div>
</div>
@if (this.AllowSort)
{
    <div class="@this.DropPanelClassName"></div>
}


