<div class="select-date-calendar-panel">
    <div class="select-month-panel">
        <span class="image-panel" @onclick="e => ChangeMonth(-1)" @onclick:stopPropagation="true">
            <img src="@UrlInfo.GetIconUrl(Higlabo__icon.ArrowGlayLeft__svg)" class="icon" />
        </span>
        <span class="current-month">@this.Date.ToString("yyyy/MM")</span>
        <span class="image-panel" @onclick="e => ChangeMonth(1)" @onclick:stopPropagation="true">
            <img src="@UrlInfo.GetIconUrl(Higlabo__icon.ArrowGlayRight__svg)" class="icon" />
        </span>
    </div>
    <table class="date-calendar-table">
        <thead>
            <tr>
                @foreach (var rDate in this.WeekList[0].DateList)
                {
                    var dw = rDate.Date.DayOfWeek;
                    <td class="@dw.ToStringFromEnum().ToLower()">
                        <span>@this.DateTimeFormat.GetShortestDayName(dw)</span>
                    </td>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var rWeek in this.WeekList)
            {
                <tr>
                    @foreach (var rDate in rWeek.DateList)
                    {
                        var dw = rDate.Date.DayOfWeek;
                        var dateText = rDate.Date.ToString("dd");
                        var className = $"{dw.ToStringFromEnum().ToLower()}";
                        if (rDate.Date == this.Date)
                        {
                            className += " selected-date";
                        }
                        else if (rDate.Date.Month != this.Date.Month)
                        {
                            className += " other-month";
                        }
                        <td class="@className" @onclick="async e => await Date_Click(rDate.Date)" @onclick:stopPropagation="true">
                            @dateText
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
    <div class="footer-panel">
        <button class="button radius-button" @onclick="async e => await ClearButton_Click()" @onclick:stopPropagation="true">@T.Text.Clear</button>
        <button class="button radius-button" @onclick="async e => await CloseButton_Click()" @onclick:stopPropagation="true">@T.Text.Close</button>
    </div>
</div>




